buildscript {
	ext {
		springBootVersion = '1.5.4.RELEASE'
	}
	repositories {
		mavenCentral()
		maven {
			url 'https://plugins.gradle.org/m2/'
		}
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath 'nu.studer:gradle-jooq-plugin:2.0.6'
		classpath "gradle.plugin.com.boxfuse.client:flyway-release:4.2.0"
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'nu.studer.jooq'
apply plugin: "org.flywaydb.flyway"


version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-jooq')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('com.h2database:h2:1.4.193')
	compile 'org.jooq:jooq'
	jooqRuntime 'com.h2database:h2:1.4.193'
	compile('org.flywaydb:flyway-core:4.0.3')
	compileOnly('org.projectlombok:lombok')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

jooq {
	version = '3.9.2'
	edition = 'OSS'
	sample(sourceSets.main) {
		jdbc {
			driver = 'org.h2.Driver'
			url = 'jdbc:h2:/tmp/h2.db'
			user = 'sa'
			password = ''
		}
		generator {
			name = 'org.jooq.util.DefaultGenerator'
			strategy {
				name = 'org.jooq.util.DefaultGeneratorStrategy'
			}
			database {
				name = 'org.jooq.util.h2.H2Database'
				includes = '.*'
				excludes = ''
				dateAsTimestamp = true
				inputSchema = 'PUBLIC'
			}
			generate {
				relations = true
				deprecated = false
				records = true
				immutablePojos = true
				fluentSetters = true
				pojos = true
				instanceFields = true
			}
			target {
				packageName = 'cc.before30.sample.domain.entity'
			}
		}
	}
}

flyway {
	driver = 'org.h2.Driver'
	url = 'jdbc:h2:/tmp/h2.db'
	user = 'sa'
	password = ''
	schemas = ['PUBLIC']
	locations = ["filesystem:$project.projectDir/src/main/resources/db/migration"]
}

generateSampleJooqSchemaSource.dependsOn flywayMigrate
test.dependsOn flywayClean
